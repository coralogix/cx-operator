/*
 * This file was generated by guardrail (https://github.com/twilio/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
 */
package com.coralogix.operator.client.model.generated.apiextensions.v1

import io.circe._
import io.circe.syntax._
case class CustomResourceDefinitionStatus(
  acceptedNames: Option[CustomResourceDefinitionNames] = None,
  conditions: Option[Vector[CustomResourceDefinitionCondition]] = None,
  storedVersions: Option[Vector[String]] = None
)
object CustomResourceDefinitionStatus {
  implicit val encodeCustomResourceDefinitionStatus
    : Encoder.AsObject[CustomResourceDefinitionStatus] = {
    val readOnlyKeys = Set[String]()
    Encoder.AsObject
      .instance[CustomResourceDefinitionStatus](a =>
        JsonObject.fromIterable(
          Vector(
            ("acceptedNames", a.acceptedNames.asJson),
            ("conditions", a.conditions.asJson),
            ("storedVersions", a.storedVersions.asJson)
          )
        )
      )
      .mapJsonObject(_.filterKeys(key => !(readOnlyKeys contains key)))
  }
  implicit val decodeCustomResourceDefinitionStatus: Decoder[CustomResourceDefinitionStatus] =
    new Decoder[CustomResourceDefinitionStatus] {
      final def apply(c: HCursor): Decoder.Result[CustomResourceDefinitionStatus] =
        for {
          v0 <- c.downField("acceptedNames").as[Option[CustomResourceDefinitionNames]]
          v1 <- c.downField("conditions").as[Option[Vector[CustomResourceDefinitionCondition]]]
          v2 <- c.downField("storedVersions").as[Option[Vector[String]]]
        } yield CustomResourceDefinitionStatus(v0, v1, v2)
    }
}
