/*
 * This file was generated by guardrail (https://github.com/twilio/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
 */
package com.coralogix.operator.client.model.generated.apiextensions.v1

import io.circe._
import io.circe.syntax._
case class ExternalDocumentation(description: Option[String] = None, url: Option[String] = None)
object ExternalDocumentation {
  implicit val encodeExternalDocumentation: Encoder.AsObject[ExternalDocumentation] = {
    val readOnlyKeys = Set[String]()
    Encoder.AsObject
      .instance[ExternalDocumentation](a =>
        JsonObject.fromIterable(
          Vector(("description", a.description.asJson), ("url", a.url.asJson))
        )
      )
      .mapJsonObject(_.filterKeys(key => !(readOnlyKeys contains key)))
  }
  implicit val decodeExternalDocumentation: Decoder[ExternalDocumentation] =
    new Decoder[ExternalDocumentation] {
      final def apply(c: HCursor): Decoder.Result[ExternalDocumentation] =
        for {
          v0 <- c.downField("description").as[Option[String]]
          v1 <- c.downField("url").as[Option[String]]
        } yield ExternalDocumentation(v0, v1)
    }
}
