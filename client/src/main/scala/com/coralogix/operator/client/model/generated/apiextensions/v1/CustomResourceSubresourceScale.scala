/*
 * This file was generated by guardrail (https://github.com/twilio/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
 */
package com.coralogix.operator.client.model.generated.apiextensions.v1

import io.circe._
import io.circe.syntax._
case class CustomResourceSubresourceScale(
  labelSelectorPath: Option[String] = None,
  specReplicasPath: String,
  statusReplicasPath: String
)
object CustomResourceSubresourceScale {
  implicit val encodeCustomResourceSubresourceScale
    : Encoder.AsObject[CustomResourceSubresourceScale] = {
    val readOnlyKeys = Set[String]()
    Encoder.AsObject
      .instance[CustomResourceSubresourceScale](a =>
        JsonObject.fromIterable(
          Vector(
            ("labelSelectorPath", a.labelSelectorPath.asJson),
            ("specReplicasPath", a.specReplicasPath.asJson),
            ("statusReplicasPath", a.statusReplicasPath.asJson)
          )
        )
      )
      .mapJsonObject(_.filterKeys(key => !(readOnlyKeys contains key)))
  }
  implicit val decodeCustomResourceSubresourceScale: Decoder[CustomResourceSubresourceScale] =
    new Decoder[CustomResourceSubresourceScale] {
      final def apply(c: HCursor): Decoder.Result[CustomResourceSubresourceScale] =
        for {
          v0 <- c.downField("labelSelectorPath").as[Option[String]]
          v1 <- c.downField("specReplicasPath").as[String]
          v2 <- c.downField("statusReplicasPath").as[String]
        } yield CustomResourceSubresourceScale(v0, v1, v2)
    }
}
