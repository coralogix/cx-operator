/*
 * This file was generated by guardrail (https://github.com/twilio/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
 */
package com.coralogix.operator.client.model.generated.apiextensions.v1

import io.circe._
import io.circe.syntax._
case class CustomResourceColumnDefinition(
  description: Option[String] = None,
  format: Option[String] = None,
  jsonPath: String,
  name: String,
  priority: Option[Int] = None,
  `type`: String
)
object CustomResourceColumnDefinition {
  implicit val encodeCustomResourceColumnDefinition
    : Encoder.AsObject[CustomResourceColumnDefinition] = {
    val readOnlyKeys = Set[String]()
    Encoder.AsObject
      .instance[CustomResourceColumnDefinition](a =>
        JsonObject.fromIterable(
          Vector(
            ("description", a.description.asJson),
            ("format", a.format.asJson),
            ("jsonPath", a.jsonPath.asJson),
            ("name", a.name.asJson),
            ("priority", a.priority.asJson),
            ("type", a.`type`.asJson)
          )
        )
      )
      .mapJsonObject(_.filterKeys(key => !(readOnlyKeys contains key)))
  }
  implicit val decodeCustomResourceColumnDefinition: Decoder[CustomResourceColumnDefinition] =
    new Decoder[CustomResourceColumnDefinition] {
      final def apply(c: HCursor): Decoder.Result[CustomResourceColumnDefinition] =
        for {
          v0 <- c.downField("description").as[Option[String]]
          v1 <- c.downField("format").as[Option[String]]
          v2 <- c.downField("jsonPath").as[String]
          v3 <- c.downField("name").as[String]
          v4 <- c.downField("priority").as[Option[Int]]
          v5 <- c.downField("type").as[String]
        } yield CustomResourceColumnDefinition(v0, v1, v2, v3, v4, v5)
    }
}
