name: 'Create a new release'
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
      changelog:
        description: 'Changelog for the release'
        required: true

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Calculate short SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install helm-release
        run: |
          helm plugin install https://github.com/sstarcher/helm-release

      - name: Tag
        run: |
          git tag -a ${{ github.event.inputs.version }} -m ${{ github.event.inputs.version }}

      - name: Helm release
        run: |
          helm release charts/cx-operator

      - name: Commit and push
        run: |
          git add charts -v
          git commit -m "Release ${{ github.event.inputs.version }}"
          git tag -a ${{ github.event.inputs.version }}-final -m ${{ github.event.inputs.version }}-final
          git push
          git push --tags

      - name: Tag Docker image
        run: |
          docker pull coralogixrepo/cx-operator:sha-${{ steps.vars.outputs.sha_short }}
          docker tag coralogixrepo/cx-operator:sha-${{ steps.vars.outputs.sha_short }} coralogixrepo/cx-operator:${{ github.event.inputs.version }}
          docker push coralogixrepo/cx-operator:${{ github.event.inputs.version }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.changelog }}
          draft: false
          prerelease: false
