/*
 * This file was generated by guardrail (https://github.com/twilio/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
 */
package zio.k8s.codegen.k8smodel

import cats.syntax.either._
import io.circe._
import io.circe.syntax._
import cats.implicits._

case class CustomResourceDefinitionList(
  apiVersion: Option[String] = None,
  items: Vector[CustomResourceDefinition] = Vector.empty,
  kind: Option[String] = None
)
object CustomResourceDefinitionList {
  implicit val encodeIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionList
    : Encoder.AsObject[CustomResourceDefinitionList] = {
    val readOnlyKeys = Set[String]()
    Encoder.AsObject
      .instance[CustomResourceDefinitionList](a =>
        JsonObject.fromIterable(
          Vector(
            ("apiVersion", a.apiVersion.asJson),
            ("items", a.items.asJson),
            ("kind", a.kind.asJson)
          )
        )
      )
      .mapJsonObject(_.filterKeys(key => !(readOnlyKeys contains key)))
  }
  implicit val decodeIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionList
    : Decoder[CustomResourceDefinitionList] = new Decoder[CustomResourceDefinitionList] {
    final def apply(c: HCursor): Decoder.Result[CustomResourceDefinitionList] =
      for {
        v0 <- c.downField("apiVersion").as[Option[String]]
        v1 <- c.downField("items").as[Vector[CustomResourceDefinition]]
        v2 <- c.downField("kind").as[Option[String]]
      } yield CustomResourceDefinitionList(v0, v1, v2)
  }
}
