/*
 * This file was generated by guardrail (https://github.com/twilio/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
 */
package zio.k8s.codegen.k8smodel

import cats.syntax.either._
import io.circe._
import io.circe.syntax._
import cats.implicits._

case class CustomResourceDefinitionVersion(
  additionalPrinterColumns: Option[Vector[CustomResourceColumnDefinition]] = None,
  deprecated: Option[Boolean] = None,
  deprecationWarning: Option[String] = None,
  name: String,
  schema: Option[CustomResourceValidation] = None,
  served: Boolean,
  storage: Boolean,
  subresources: Option[CustomResourceSubresources] = None
)
object CustomResourceDefinitionVersion {
  implicit val encodeIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion
    : Encoder.AsObject[CustomResourceDefinitionVersion] = {
    val readOnlyKeys = Set[String]()
    Encoder.AsObject
      .instance[CustomResourceDefinitionVersion](a =>
        JsonObject.fromIterable(
          Vector(
            ("additionalPrinterColumns", a.additionalPrinterColumns.asJson),
            ("deprecated", a.deprecated.asJson),
            ("deprecationWarning", a.deprecationWarning.asJson),
            ("name", a.name.asJson),
            ("schema", a.schema.asJson),
            ("served", a.served.asJson),
            ("storage", a.storage.asJson),
            ("subresources", a.subresources.asJson)
          )
        )
      )
      .mapJsonObject(_.filterKeys(key => !(readOnlyKeys contains key)))
  }
  implicit val decodeIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion
    : Decoder[CustomResourceDefinitionVersion] = new Decoder[CustomResourceDefinitionVersion] {
    final def apply(c: HCursor): Decoder.Result[CustomResourceDefinitionVersion] =
      for {
        v0 <-
          c.downField("additionalPrinterColumns").as[Option[Vector[CustomResourceColumnDefinition]]]
        v1 <- c.downField("deprecated").as[Option[Boolean]]
        v2 <- c.downField("deprecationWarning").as[Option[String]]
        v3 <- c.downField("name").as[String]
        v4 <- c.downField("schema").as[Option[CustomResourceValidation]]
        v5 <- c.downField("served").as[Boolean]
        v6 <- c.downField("storage").as[Boolean]
        v7 <- c.downField("subresources").as[Option[CustomResourceSubresources]]
      } yield CustomResourceDefinitionVersion(v0, v1, v2, v3, v4, v5, v6, v7)
  }
}
