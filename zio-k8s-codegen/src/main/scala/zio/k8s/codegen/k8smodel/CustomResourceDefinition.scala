/*
 * This file was generated by guardrail (https://github.com/twilio/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
 */
package zio.k8s.codegen.k8smodel

import io.circe._
import io.circe.syntax._

case class CustomResourceDefinition(
  apiVersion: Option[String] = None,
  kind: Option[String] = None,
  spec: CustomResourceDefinitionSpec,
  status: Option[CustomResourceDefinitionStatus] = None
)
object CustomResourceDefinition {
  implicit val encodeIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition
    : Encoder.AsObject[CustomResourceDefinition] = {
    val readOnlyKeys = Set[String]()
    Encoder.AsObject
      .instance[CustomResourceDefinition](a =>
        JsonObject.fromIterable(
          Vector(
            ("apiVersion", a.apiVersion.asJson),
            ("kind", a.kind.asJson),
            ("spec", a.spec.asJson),
            ("status", a.status.asJson)
          )
        )
      )
      .mapJsonObject(_.filterKeys(key => !(readOnlyKeys contains key)))
  }
  implicit val decodeIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition
    : Decoder[CustomResourceDefinition] = new Decoder[CustomResourceDefinition] {
    final def apply(c: HCursor): Decoder.Result[CustomResourceDefinition] =
      for {
        v0 <- c.downField("apiVersion").as[Option[String]]
        v1 <- c.downField("kind").as[Option[String]]
        v2 <- c.downField("spec").as[CustomResourceDefinitionSpec]
        v3 <- c.downField("status").as[Option[CustomResourceDefinitionStatus]]
      } yield CustomResourceDefinition(v0, v1, v2, v3)
  }
}
