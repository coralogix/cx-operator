/*
 * This file was generated by guardrail (https://github.com/twilio/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
 */
package zio.k8s.codegen.k8smodel

import cats.syntax.either._
import io.circe._
import io.circe.syntax._
import cats.implicits._

case class JsonSchemaProps(
  $ref: Option[String] = None,
  $schema: Option[String] = None,
  additionalItems: Option[io.circe.Json] = None,
  additionalProperties: Option[io.circe.Json] = None,
  allOf: Option[Vector[JsonSchemaProps]] = None,
  anyOf: Option[Vector[JsonSchemaProps]] = None,
  default: Option[io.circe.Json] = None,
  definitions: Option[Map[String, JsonSchemaProps]] = None,
  dependencies: Option[Map[String, io.circe.Json]] = None,
  description: Option[String] = None,
  enum: Option[Vector[io.circe.Json]] = None,
  example: Option[io.circe.Json] = None,
  exclusiveMaximum: Option[Boolean] = None,
  exclusiveMinimum: Option[Boolean] = None,
  externalDocs: Option[ExternalDocumentation] = None,
  format: Option[String] = None,
  id: Option[String] = None,
  items: Option[io.circe.Json] = None,
  maxItems: Option[Long] = None,
  maxLength: Option[Long] = None,
  maxProperties: Option[Long] = None,
  maximum: Option[Double] = None,
  minItems: Option[Long] = None,
  minLength: Option[Long] = None,
  minProperties: Option[Long] = None,
  minimum: Option[Double] = None,
  multipleOf: Option[Double] = None,
  not: Option[JsonSchemaProps] = None,
  nullable: Option[Boolean] = None,
  oneOf: Option[Vector[JsonSchemaProps]] = None,
  pattern: Option[String] = None,
  patternProperties: Option[Map[String, JsonSchemaProps]] = None,
  properties: Option[Map[String, JsonSchemaProps]] = None,
  required: Option[Vector[String]] = None,
  title: Option[String] = None,
  `type`: Option[String] = None,
  uniqueItems: Option[Boolean] = None,
  xKubernetesEmbeddedResource: Option[Boolean] = None,
  xKubernetesIntOrString: Option[Boolean] = None,
  xKubernetesListMapKeys: Option[Vector[String]] = None,
  xKubernetesListType: Option[String] = None,
  xKubernetesMapType: Option[String] = None,
  xKubernetesPreserveUnknownFields: Option[Boolean] = None
)
object JsonSchemaProps {
  implicit val encodeIoK8sApiextensionsApiserverPkgApisApiextensionsV1JsonSchemaProps
    : Encoder.AsObject[JsonSchemaProps] = {
    val readOnlyKeys = Set[String]()
    Encoder.AsObject
      .instance[JsonSchemaProps](a =>
        JsonObject.fromIterable(
          Vector(
            ("$ref", a.$ref.asJson),
            ("$schema", a.$schema.asJson),
            ("additionalItems", a.additionalItems.asJson),
            ("additionalProperties", a.additionalProperties.asJson),
            ("allOf", a.allOf.asJson),
            ("anyOf", a.anyOf.asJson),
            ("default", a.default.asJson),
            ("definitions", a.definitions.asJson),
            ("dependencies", a.dependencies.asJson),
            ("description", a.description.asJson),
            ("enum", a.enum.asJson),
            ("example", a.example.asJson),
            ("exclusiveMaximum", a.exclusiveMaximum.asJson),
            ("exclusiveMinimum", a.exclusiveMinimum.asJson),
            ("externalDocs", a.externalDocs.asJson),
            ("format", a.format.asJson),
            ("id", a.id.asJson),
            ("items", a.items.asJson),
            ("maxItems", a.maxItems.asJson),
            ("maxLength", a.maxLength.asJson),
            ("maxProperties", a.maxProperties.asJson),
            ("maximum", a.maximum.asJson),
            ("minItems", a.minItems.asJson),
            ("minLength", a.minLength.asJson),
            ("minProperties", a.minProperties.asJson),
            ("minimum", a.minimum.asJson),
            ("multipleOf", a.multipleOf.asJson),
            ("not", a.not.asJson),
            ("nullable", a.nullable.asJson),
            ("oneOf", a.oneOf.asJson),
            ("pattern", a.pattern.asJson),
            ("patternProperties", a.patternProperties.asJson),
            ("properties", a.properties.asJson),
            ("required", a.required.asJson),
            ("title", a.title.asJson),
            ("type", a.`type`.asJson),
            ("uniqueItems", a.uniqueItems.asJson),
            ("x-kubernetes-embedded-resource", a.xKubernetesEmbeddedResource.asJson),
            ("x-kubernetes-int-or-string", a.xKubernetesIntOrString.asJson),
            ("x-kubernetes-list-map-keys", a.xKubernetesListMapKeys.asJson),
            ("x-kubernetes-list-type", a.xKubernetesListType.asJson),
            ("x-kubernetes-map-type", a.xKubernetesMapType.asJson),
            ("x-kubernetes-preserve-unknown-fields", a.xKubernetesPreserveUnknownFields.asJson)
          )
        )
      )
      .mapJsonObject(_.filterKeys(key => !(readOnlyKeys contains key)))
  }
  implicit val decodeIoK8sApiextensionsApiserverPkgApisApiextensionsV1JsonSchemaProps
    : Decoder[JsonSchemaProps] = new Decoder[JsonSchemaProps] {
    final def apply(c: HCursor): Decoder.Result[JsonSchemaProps] =
      for {
        v0  <- c.downField("$ref").as[Option[String]]
        v1  <- c.downField("$schema").as[Option[String]]
        v2  <- c.downField("additionalItems").as[Option[io.circe.Json]]
        v3  <- c.downField("additionalProperties").as[Option[io.circe.Json]]
        v4  <- c.downField("allOf").as[Option[Vector[JsonSchemaProps]]]
        v5  <- c.downField("anyOf").as[Option[Vector[JsonSchemaProps]]]
        v6  <- c.downField("default").as[Option[io.circe.Json]]
        v7  <- c.downField("definitions").as[Option[Map[String, JsonSchemaProps]]]
        v8  <- c.downField("dependencies").as[Option[Map[String, io.circe.Json]]]
        v9  <- c.downField("description").as[Option[String]]
        v10 <- c.downField("enum").as[Option[Vector[io.circe.Json]]]
        v11 <- c.downField("example").as[Option[io.circe.Json]]
        v12 <- c.downField("exclusiveMaximum").as[Option[Boolean]]
        v13 <- c.downField("exclusiveMinimum").as[Option[Boolean]]
        v14 <- c.downField("externalDocs").as[Option[ExternalDocumentation]]
        v15 <- c.downField("format").as[Option[String]]
        v16 <- c.downField("id").as[Option[String]]
        v17 <- c.downField("items").as[Option[io.circe.Json]]
        v18 <- c.downField("maxItems").as[Option[Long]]
        v19 <- c.downField("maxLength").as[Option[Long]]
        v20 <- c.downField("maxProperties").as[Option[Long]]
        v21 <- c.downField("maximum").as[Option[Double]]
        v22 <- c.downField("minItems").as[Option[Long]]
        v23 <- c.downField("minLength").as[Option[Long]]
        v24 <- c.downField("minProperties").as[Option[Long]]
        v25 <- c.downField("minimum").as[Option[Double]]
        v26 <- c.downField("multipleOf").as[Option[Double]]
        v27 <- c.downField("not").as[Option[JsonSchemaProps]]
        v28 <- c.downField("nullable").as[Option[Boolean]]
        v29 <- c.downField("oneOf").as[Option[Vector[JsonSchemaProps]]]
        v30 <- c.downField("pattern").as[Option[String]]
        v31 <- c.downField("patternProperties").as[Option[Map[String, JsonSchemaProps]]]
        v32 <- c.downField("properties").as[Option[Map[String, JsonSchemaProps]]]
        v33 <- c.downField("required").as[Option[Vector[String]]]
        v34 <- c.downField("title").as[Option[String]]
        v35 <- c.downField("type").as[Option[String]]
        v36 <- c.downField("uniqueItems").as[Option[Boolean]]
        v37 <- c.downField("x-kubernetes-embedded-resource").as[Option[Boolean]]
        v38 <- c.downField("x-kubernetes-int-or-string").as[Option[Boolean]]
        v39 <- c.downField("x-kubernetes-list-map-keys").as[Option[Vector[String]]]
        v40 <- c.downField("x-kubernetes-list-type").as[Option[String]]
        v41 <- c.downField("x-kubernetes-map-type").as[Option[String]]
        v42 <- c.downField("x-kubernetes-preserve-unknown-fields").as[Option[Boolean]]
      } yield JsonSchemaProps(
        v0,
        v1,
        v2,
        v3,
        v4,
        v5,
        v6,
        v7,
        v8,
        v9,
        v10,
        v11,
        v12,
        v13,
        v14,
        v15,
        v16,
        v17,
        v18,
        v19,
        v20,
        v21,
        v22,
        v23,
        v24,
        v25,
        v26,
        v27,
        v28,
        v29,
        v30,
        v31,
        v32,
        v33,
        v34,
        v35,
        v36,
        v37,
        v38,
        v39,
        v40,
        v41,
        v42
      )
  }
}
