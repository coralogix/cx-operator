/*
 * This file was generated by guardrail (https://github.com/twilio/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
 */
package zio.k8s.codegen.k8smodel

import cats.syntax.either._
import io.circe._
import io.circe.syntax._
import cats.implicits._

case class CustomResourceSubresources(
  scale: Option[CustomResourceSubresourceScale] = None,
  status: Option[io.circe.Json] = None
)
object CustomResourceSubresources {
  implicit val encodeIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources
    : Encoder.AsObject[CustomResourceSubresources] = {
    val readOnlyKeys = Set[String]()
    Encoder.AsObject
      .instance[CustomResourceSubresources](a =>
        JsonObject.fromIterable(Vector(("scale", a.scale.asJson), ("status", a.status.asJson)))
      )
      .mapJsonObject(_.filterKeys(key => !(readOnlyKeys contains key)))
  }
  implicit val decodeIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources
    : Decoder[CustomResourceSubresources] = new Decoder[CustomResourceSubresources] {
    final def apply(c: HCursor): Decoder.Result[CustomResourceSubresources] =
      for {
        v0 <- c.downField("scale").as[Option[CustomResourceSubresourceScale]]
        v1 <- c.downField("status").as[Option[io.circe.Json]]
      } yield CustomResourceSubresources(v0, v1)
  }
}
