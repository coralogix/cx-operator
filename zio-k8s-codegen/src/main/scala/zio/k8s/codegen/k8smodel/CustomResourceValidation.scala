/*
 * This file was generated by guardrail (https://github.com/twilio/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
 */
package zio.k8s.codegen.k8smodel

import cats.syntax.either._
import io.circe._
import io.circe.syntax._
import cats.implicits._

case class CustomResourceValidation(openApiv3Schema: Option[JsonSchemaProps] = None)
object CustomResourceValidation {
  implicit val encodeIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation
    : Encoder.AsObject[CustomResourceValidation] = {
    val readOnlyKeys = Set[String]()
    Encoder.AsObject
      .instance[CustomResourceValidation](a =>
        JsonObject.fromIterable(Vector(("openAPIV3Schema", a.openApiv3Schema.asJson)))
      )
      .mapJsonObject(_.filterKeys(key => !(readOnlyKeys contains key)))
  }
  implicit val decodeIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation
    : Decoder[CustomResourceValidation] = new Decoder[CustomResourceValidation] {
    final def apply(c: HCursor): Decoder.Result[CustomResourceValidation] =
      for (v0 <- c.downField("openAPIV3Schema").as[Option[JsonSchemaProps]])
        yield CustomResourceValidation(v0)
  }
}
